package exercicio_01;

public interface Tanque {
	public void atirar();

	public void setCorTanque(CoresRGB cor);

	public CoresRGB getCorTanque();

	public CoresRGB getCorCanhao();

	public void setCorCanhao(CoresRGB cor);

	public void setX(double x);

	public void setY(double y);

	public double getX();

	public double getY();
}

--------------------------

package exercicio_01;

public class TanqueA implements Tanque {
	private double x, y;
	private CoresRGB corTanque;
	private CoresRGB corCanhao;

	public TanqueA(double x, double y, CoresRGB corTanque, CoresRGB corCanhao) {
		super();
		this.x = x;
		this.y = y;
		this.corTanque = corTanque;
		this.corCanhao = corCanhao;
	}

	@Override
	public void setCorTanque(CoresRGB corTanque) {
		this.corTanque = corTanque;
	}

	@Override
	public CoresRGB getCorTanque() {
		return this.corTanque;
	}

	@Override
	public CoresRGB getCorCanhao() {
		return this.corCanhao;
	}

	@Override
	public void setCorCanhao(CoresRGB corCanhao) {
		this.corCanhao = corCanhao;
	}

	@Override
	public void setX(double x) {
		this.x = x;
	}

	@Override
	public void setY(double y) {
		this.y = y;
	}

	@Override
	public double getX() {
		return this.x;
	}

	@Override
	public double getY() {
		return this.y;
	}

	@Override
	public void atirar() {
		System.out.println("Atirando...");
	}

	@Override
	public String toString() {
		return "Tanque{" + "x=" + x + ", y=" + y + ", corTanque=" + corTanque + ", corCanhao=" + corCanhao + '}';
	}

}

-----------------

package exercicio_01;

public class FabricaTanqueA {

	public static Tanque factoryMethod(CoresRGB coresRGB) {
		Tanque tanque = null;
		return tanque = new TanqueA(10, 20, coresRGB.BLUE, coresRGB.GREEN);
	}

}

--------------


package exercicio_01;

public enum CoresRGB {
	RED, GREEN, BLUE;
}

--------------

package exercicio_01;

public class UsaFabrica {

	public static void main(String[] args) {
		Tanque tanque = FabricaTanqueA.factoryMethod(CoresRGB.BLUE);
		System.out.println(tanque);
	}

}


